// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.LoginView = (function(_super) {
    __extends(LoginView, _super);

    function LoginView() {
      _ref = LoginView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    LoginView.prototype.template = '<div class="panel-heading">\
      <h3 class="panel-title">Register or Login</h3>\
        <div class="input-group">\
          <input type="text" class="form-control" placeholder="name">\
          <button id="submitButton" type="submit" class="btn btn-primary">Submit</button>\
        </div>\
    </div>';

    LoginView.prototype.initialize = function() {
      return this.render();
    };

    LoginView.prototype.events = {
      "click #submitButton": 'getUser'
    };

    LoginView.prototype.getUser = function() {
      var _this = this;
      this.username = this.$('input').val();
      _(this.model).extend({
        name: this.username
      });
      return this.model.fetch({
        error: function(model, response) {
          return console.log('model', model);
        },
        success: function(model, response) {
          return _this.userInfoReceived(response);
        }
      });
    };

    LoginView.prototype.userInfoReceived = function(userObject) {
      return this.trigger('userInfoReceived', userObject);
    };

    LoginView.prototype.render = function() {
      return this.$el.append(this.template);
    };

    return LoginView;

  })(Backbone.View);

}).call(this);

/*
//@ sourceMappingURL=LoginView.map
*/
