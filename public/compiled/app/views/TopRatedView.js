// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.TopRatedView = (function(_super) {
    __extends(TopRatedView, _super);

    function TopRatedView() {
      _ref = TopRatedView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    TopRatedView.prototype.template = '\
      <div>\
      <h2>Most Similar to / Least Similar to</h2>\
      <div id="toprated">\
      </div>\
      </div>\
      ';

    TopRatedView.prototype.initialize = function() {
      this.oldRated;
      this.$el.append(this.template);
      this.$('#toprated').isotope({
        itemSelector: '.element',
        animationEngine: 'jquery'
      });
      return setTimeout(function() {
        return this.$('#toprated').isotope('reLayout');
      }, 100);
    };

    TopRatedView.prototype.translateRes = function(res) {
      return res.bestScores;
    };

    TopRatedView.prototype.reRender = function(res) {
      var index, newUser, removeUser, topRatedToAdd, topRatedToRemove, userid;
      console.log(res);
      this.$('#toprated').isotope('shuffle');
      topRatedToAdd = _.difference(res.bestRated, this.oldRated);
      topRatedToRemove = _.difference(this.oldRated, res.bestRated);
      this.oldRated = res.bestRated;
      for (index in topRatedToAdd) {
        userid = topRatedToAdd[index];
        this.name = this.model.userObj.userLookup[userid] || 'newUser';
        newUser = $('<div class="element metalloid ' + this.name.replace(/\s+/g, '').toLowerCase() + '">' + this.name + '</div>');
        this.$('#toprated').isotope('insert', newUser);
      }
      for (index in topRatedToRemove) {
        userid = topRatedToRemove[index];
        this.nameRemove = this.model.userObj.userLookup[userid] || 'newUser';
        removeUser = this.$('.' + this.nameRemove.replace(/\s+/g, '').toLowerCase());
        this.$('#toprated').isotope('remove', removeUser);
      }
      return this.$('#toprated').isotope('shuffle');
    };

    return TopRatedView;

  })(Backbone.View);

}).call(this);

/*
//@ sourceMappingURL=TopRatedView.map
*/
