// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.RecommendationView = (function(_super) {
    __extends(RecommendationView, _super);

    function RecommendationView() {
      _ref = RecommendationView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    RecommendationView.prototype.template = '\
      <div>\
      <div id="container">\
      </div>\
      <tbody>\
      <table class="table table-hover">\
      </table>\
      </tbody>\
      </div>\
      ';

    RecommendationView.prototype.initialize = function() {
      this.oldMovies;
      this.$el.append(this.template);
      this.$('#container').isotope({
        itemSelector: '.element',
        animationEngine: 'jquery'
      });
      return setTimeout(function() {
        return this.$('#container').isotope('reLayout');
      }, 100);
    };

    RecommendationView.prototype.handleRating = function(ratingObject) {
      var _this = this;
      _(this.model).extend({
        idFetch: ratingObject.id,
        likeFetch: ratingObject.like
      });
      return this.model.fetch({
        error: function(model, response) {
          return console.log('error model', model);
        },
        success: function(model, response) {
          console.log('success model', model);
          console.log('success res', response);
          return _this.render(response);
        }
      });
    };

    RecommendationView.prototype.render = function(res) {
      var index, movieid, moviesToAdd, moviesToRemove, newMovie, removeMovie, _results;
      console.log(res);
      moviesToAdd = _.difference(res, this.oldMovies);
      moviesToRemove = _.difference(this.oldMovies, res);
      this.oldMovies = res;
      for (index in moviesToAdd) {
        movieid = moviesToAdd[index];
        newMovie = $('<div class="element sprites ' + this.model.userObj.movieLookup[movieid].replace(/\s+/g, '').toLowerCase() + '">' + this.model.userObj.movieLookup[movieid] + '</div>');
        this.$('#container').isotope('insert', newMovie);
      }
      _results = [];
      for (index in moviesToRemove) {
        movieid = moviesToRemove[index];
        removeMovie = this.$('.' + this.model.userObj.movieLookup[movieid].replace(/\s+/g, '').toLowerCase());
        _results.push(this.$('#container').isotope('remove', removeMovie));
      }
      return _results;
    };

    return RecommendationView;

  })(Backbone.View);

}).call(this);

/*
//@ sourceMappingURL=RecommendationView.map
*/
