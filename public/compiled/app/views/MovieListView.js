// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  window.MovieListView = (function(_super) {
    __extends(MovieListView, _super);

    function MovieListView() {
      _ref = MovieListView.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    MovieListView.prototype.template = '<div>\
    <h2>Mosaic Films</h2>\
    <div class="scrollBox">\
    <tbody>\
      <table class="table">\
      </table>\
    </tbody>\
    </div>\
    </div>';

    MovieListView.prototype.initialize = function() {
      return this.render();
    };

    MovieListView.prototype.events = {
      "click .btn": function(e) {
        if (e.currentTarget.classList[0] !== 'notseen') {
          this.newRating(e.currentTarget.id, e.currentTarget.classList[0]);
        }
        return this.$('#' + e.currentTarget.id).hide('slow');
      }
    };

    MovieListView.prototype.newRating = function(id, like) {
      console.log('id', id, like);
      return this.trigger('newRating', {
        id: id,
        like: like
      });
    };

    MovieListView.prototype.render = function() {
      var index, movie, _ref1, _results;
      this.$el.append(this.template);
      _ref1 = _.shuffle(this.model.userObj.allMovies);
      _results = [];
      for (index in _ref1) {
        movie = _ref1[index];
        _results.push(this.$('.table').append('<tr id="' + movie._id + '"><td>\
        ' + movie.name + '</td>\
        <td>\
        <button type="button" class="liked btn btn-success btn-xs" id="' + movie._id + '"><i class="icon-thumbs-up"></i></button>\
        <button type="button" class="disliked btn btn-danger btn-xs" id="' + movie._id + '"><i class="icon-thumbs-down"></i></button>\
        <button type="button" class="notseen btn btn-warning btn-xs" id="' + movie._id + '"><i class="icon-chevron-right"></i></button>\
        </td>\
        </tr>'));
      }
      return _results;
    };

    return MovieListView;

  })(Backbone.View);

}).call(this);

/*
//@ sourceMappingURL=MovieListView.map
*/
